// Какое будет выведено значение: let x = 5; alert( x++ ); ?
// Ответ: 5. Потому что при такой записи сначала выводится х, а потом прибавляются ++. Надо alert( ++x )

// Чему равно такое выражение: [ ] + false - null + true ?
// Ответ:NaN
console.log(typeof([] + false)); // "false" (пустой массив при сложении превращается в строку)
console.log(([] + false - null)); // NaN (выполняем вычитание НЕцифр). тип данных значения NaN при этом - number
console.log(([] + false - null + true)); // NaN (к number прибавляем boolean)

// Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?
// Ответ: 2. Последовательное присваивание, x становится = 2.

// Чему равна сумма [ ] + 1 + 2?
// Ответ: 12 
console.log([] + 1 + 2); // строка "12"

// Что выведет этот код: alert( "1"[0] )?
// Ответ: 1. Обращаемся к строке "1" по индексу [0]. ([0] - это не массив здесь)

// Чему равно 2 && 1 && null && 0 && undefined ?
// Ответ: null. "&&" всегда запинается на лжи, возвращает первое ложное значение, которое встречает. 
console.log(2 && 1 && NaN && null && 0 && undefined); // вернет NaN

// Есть ли разница между выражениями? !!(a && b) и (a && b)?
// Ответ: Не равны. Сравнение слева равно boolean (true) из-за !! 
console.log(!!(1 && 2) === (1 && 2));

// Что выведет этот код: alert( null || 2 && 3 || 4 ); ?
// Ответ: 3. Первым выполнится &&, а потом ИЛИ ( || ) запинается на правде. Возвращает первое правдивое значение.

// a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
// Ответ: Нет. Это два разных хранилища информации, несмотря на то, что внутри одинаковые значения.

// Что выведет этот код: alert(+"Infinity"); ?
// Ответ: "Infinity" . Infinity - зарезервированное значение. это глобальное свойство, является числовым значением, представляющим бесконечность.
console.log(+"Infinity");
console.log(+"infinity"); // это уже обычная строка, поэтому после приведения к числу через "+" будет NaN

// Верно ли сравнение: "Ёжик" > "яблоко"?
// Ответ: false. Надо сравнивать символы юникода 

// Чему равно 0 || "" || 2 || undefined || true || falsе ?
// Ответ: 2. ИЛИ возвращает первое правдивое значение, которое встречает 


