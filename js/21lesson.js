"use strict";

// const arr = [1, 2, 3, 6, 8];

// // добавляем 99-ым элементом значение 0. 
// arr[99] = 0; // при запросе длины массива нам вернется 100. 
// console.log(arr.length); // что соответствует правилу lenght = индекс последнего элемента + 1. 
// // то есть, элементов на самом деле может быть на первый взгляд 6, но мы нарушили порядок, вставив 99-й элемент.
// // так делать не надо 

const arr = [2, 3, 6, 8, 10];
// в этом методе не сможем остановить выполнение, потому что не работают break и continue 
arr.forEach(function(item, i, arr) {
    console.log(`${i}: ${item} внутри массива ${arr}`);
});
// вернется [ 1, 2, 3, 6, 8, <94 empty items>, 0 ]
console.log(arr);

// // методы работы с концом массива (последним элементом)
// arr.pop();
// arr.push(10);

// console.log(arr);

// методы работы с началом массива (первым элементом) используются редко. 
// потому что при добавлении/удалении первого элемента меняются индексы у всех элементов - 
// это значительно утяжеляет (замедляет) выполнение кода  

// выполнить действие для всех элементов массива 
for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
}

for (let value of arr) {
    console.log(value);
}

// Методы трансформации массивов (изменяют изначальный массив):
arr.map();
arr.every();
arr.some();
arr.filter();
arr.reduce();

// Псевдомассивы - структуры, получаемые от юзера, выглядят как массив, но не имеют всех методов массивов.